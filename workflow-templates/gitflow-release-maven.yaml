name: Maven Deploy and Docker Package
env:
  ECR_REPOSITORY: ecr_repo
  EXEC_PROJECT: .

on: [push]

jobs:
  build:
    name: Maven build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: fregante/setup-git-token@v1
      name: Setting up GitHub credentials
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: Release-Bot
        email: releases@riverigaming.com
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    
    - name: Setting up maven settings.xml
      uses: whelk-io/maven-settings-xml-action@v7
      with:
        servers: '[{ "id": "river-nexus", "username": "${{ secrets.NEXUS_USERNAME }}", "password": "${{ secrets.NEXUS_PASSWORD }}" },{ "id": "platform-snapshots", "username": "${{ secrets.NEXUS_USERNAME }}", "password": "${{ secrets.NEXUS_PASSWORD }}" },{ "id": "platform-releases", "username": "${{ secrets.NEXUS_USERNAME }}", "password": "${{ secrets.NEXUS_PASSWORD }}" }]'
        mirrors: '[{ "id": "river-nexus", "mirrorOf": "*", "url": "https://nexus.riverigaming.tech/repository/maven-public/" }]'
        repositories: '[{ "id": "river-nexus", "url": "https://nexus.riverigaming.tech/repository/platform-releases" }]'       
    
    - uses: actions/cache@v2
      with:
        path: |
          ~/.m2/repository
          ! ~/.m2/repository/com/river
          ! ~/.m2/repository/com/bejig
        key: river-cache
        restore-keys: river-cache

    - name: Build with Maven
      run: mvn -B deploy -ntp

    - name: Get release version
      run: |
        BRANCH=${GITHUB_REF#refs/heads/}
        BUILD_NUMBER=${{ github.run_number}}
        case $BRANCH in
          master)
            PROJECT_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout)
            VERSION=$BRANCH-$PROJECT_VERSION
            ;;
          develop)
            PROJECT_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout)
            VERSION=$(echo $BRANCH-$PROJECT_VERSION | sed "s/-SNAPSHOT/-$BUILD_NUMBER/")
            ;;
          *)
            VERSION=$BRANCH-$BUILD_NUMBER
            ;;
        esac
        RELEASE_TAG=$( echo $VERSION | sed "s/[^[:alnum:]#._-]/-/g" )
        echo ::set-env name=VERSION::$(echo "$RELEASE_TAG")
        echo Setting version to: $RELEASE_TAG
     
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
        
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
        IMAGE_TAG: ${{ env.VERSION }}
      run: |
        docker build --build-arg JAR_FILE=$EXEC_PROJECT/target/*-exec.jar -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
